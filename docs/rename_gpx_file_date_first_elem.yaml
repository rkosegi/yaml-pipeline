#  Copyright 2025 Richard Kosegi
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---
# This pipeline will rename each GPX file it finds in given directory to YYYY-MM-DD.gpx
# based on date it finds in first <trkpt> element.
vars:
  srcDir: temp
steps:
  print-dir:
    order: 10
    log:
      message: Input directory is {{ .vars.srcDir }}
  process-dir:
    order: 20
    # process each GPX file in directory that is stored in .vars.srcDir
    forEach:
      glob: '{{ printf "%s/*.gpx" .vars.srcDir }}'
      action:
        steps:
          # load GPX file as text into path "imp"
          2-load:
            order: 2
            import:
              file: '{{ .forEach }}'
              mode: text
              path: imp
          # parse text at path "imp" as XML and select content based on xpath "//gpx/trk/trkseg"
          3-parse:
            order: 3
            html2dom:
              from: imp
              query: //gpx/trk/trkseg
              to: xml
          # get "trkpt" element at position 0 and get "time"'s Value, then substr it to [0:10]
          # so in the end, only YYYY-MM-DD remains
          4-get-first-element:
            order: 4
            template:
              template: |
                {{  (index .xml.trkseg.trkpt 0).time.Value | substr 0 10 }}
              path: out
              parseAs: none
              trim: true
          # exec shell to do actual rename from current to new name, based on extracted date
          7-rename:
            order: 7
            exec:
              program: sh
              args:
                - -c
                - mv {{ .forEach | quote }} {{ (printf "%s/%s.gpx" (dir .forEach) .out) | quote}}
